package beacon

// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/Azure/go-autorest/autorest"
	"github.com/Azure/go-autorest/autorest/date"
)

// Behavior enumerates the values for behavior.
type Behavior string

const (
	// Heartbeat ...
	Heartbeat Behavior = "heartbeat"
	// Recurrent ...
	Recurrent Behavior = "recurrent"
	// Transient ...
	Transient Behavior = "transient"
	// UntilFulfilled ...
	UntilFulfilled Behavior = "until-fulfilled"
	// Workflow ...
	Workflow Behavior = "workflow"
)

// PossibleBehaviorValues returns an array of possible values for the Behavior const type.
func PossibleBehaviorValues() []Behavior {
	return []Behavior{Heartbeat, Recurrent, Transient, UntilFulfilled, Workflow}
}

// Behavior1 enumerates the values for behavior 1.
type Behavior1 string

const (
	// Behavior1Heartbeat ...
	Behavior1Heartbeat Behavior1 = "heartbeat"
	// Behavior1Recurrent ...
	Behavior1Recurrent Behavior1 = "recurrent"
	// Behavior1Transient ...
	Behavior1Transient Behavior1 = "transient"
	// Behavior1UntilFulfilled ...
	Behavior1UntilFulfilled Behavior1 = "until-fulfilled"
	// Behavior1Workflow ...
	Behavior1Workflow Behavior1 = "workflow"
)

// PossibleBehavior1Values returns an array of possible values for the Behavior1 const type.
func PossibleBehavior1Values() []Behavior1 {
	return []Behavior1{Behavior1Heartbeat, Behavior1Recurrent, Behavior1Transient, Behavior1UntilFulfilled, Behavior1Workflow}
}

// Kind enumerates the values for kind.
type Kind string

const (
	// Notification ...
	Notification Kind = "notification"
	// Request ...
	Request Kind = "request"
)

// PossibleKindValues returns an array of possible values for the Kind const type.
func PossibleKindValues() []Kind {
	return []Kind{Notification, Request}
}

// State enumerates the values for state.
type State string

const (
	// Retired ...
	Retired State = "retired"
	// Running ...
	Running State = "running"
	// Suspended ...
	Suspended State = "suspended"
)

// PossibleStateValues returns an array of possible values for the State const type.
func PossibleStateValues() []State {
	return []State{Retired, Running, Suspended}
}

// State1 enumerates the values for state 1.
type State1 string

const (
	// State1Running ...
	State1Running State1 = "running"
	// State1Stopped ...
	State1Stopped State1 = "stopped"
)

// PossibleState1Values returns an array of possible values for the State1 const type.
func PossibleState1Values() []State1 {
	return []State1{State1Running, State1Stopped}
}

// Type enumerates the values for type.
type Type string

const (
	// Cron ...
	Cron Type = "cron"
	// Deadline ...
	Deadline Type = "deadline"
	// Immediate ...
	Immediate Type = "immediate"
	// TTL ...
	TTL Type = "ttl"
)

// PossibleTypeValues returns an array of possible values for the Type const type.
func PossibleTypeValues() []Type {
	return []Type{Cron, Deadline, Immediate, TTL}
}

// Type1 enumerates the values for type 1.
type Type1 string

const (
	// Type1Heartbeat ...
	Type1Heartbeat Type1 = "heartbeat"
	// Type1HTTP ...
	Type1HTTP Type1 = "http"
	// Type1Query ...
	Type1Query Type1 = "query"
)

// PossibleType1Values returns an array of possible values for the Type1 const type.
func PossibleType1Values() []Type1 {
	return []Type1{Type1Heartbeat, Type1HTTP, Type1Query}
}

// Event ...
type Event struct {
	ID       *string `json:"id,omitempty"`
	CausedBy *string `json:"causedBy,omitempty"`
	Category *string `json:"category,omitempty"`
	Type     *string `json:"type,omitempty"`
	// Kind - Possible values include: 'Notification', 'Request'
	Kind   Kind    `json:"kind,omitempty"`
	Tenant *string `json:"tenant,omitempty"`
	// Path - NRN resource path for a beacon resource. The "name" position may be redundent for the feature (ftr) and feature instance (fin) types. The "system" position is the dot-delimited hierarchy of system names above this resource, if the resource is contained within a system.
	Path          *string    `json:"path,omitempty"`
	Timestamp     *date.Time `json:"timestamp,omitempty"`
	Message       *string    `json:"message,omitempty"`
	Error         *string    `json:"error,omitempty"`
	Data          *string    `json:"data,omitempty"`
	CreatedAtLine *string    `json:"createdAtLine,omitempty"`
	// Subject - If set, a NATS message will be broadcast containing this event when it is published.
	Subject *string `json:"subject,omitempty"`
}

// Expectation ...
type Expectation struct {
	autorest.Response `json:"-"`
	// BrokenAt - The timestamp at which this expectation transitioned from healthy to unhealthy.
	BrokenAt   *date.Time `json:"brokenAt,omitempty"`
	DeadlineAt *date.Time `json:"deadlineAt,omitempty"`
	IsFailed   *bool      `json:"isFailed,omitempty"`
	// State - Possible values include: 'Suspended', 'Running', 'Retired'
	State State   `json:"state,omitempty"`
	ID    *string `json:"id,omitempty"`
	// Path - NRN resource path for a beacon resource. The "name" position may be redundent for the feature (ftr) and feature instance (fin) types. The "system" position is the dot-delimited hierarchy of system names above this resource, if the resource is contained within a system.
	Path      *string    `json:"path,omitempty"`
	CreatedAt *date.Time `json:"createdAt,omitempty"`
	UpdatedAt *date.Time `json:"updatedAt,omitempty"`
	// FailureCount - The number of times this expectation has failed since it was last fulfilled.
	FailureCount *float64 `json:"failureCount,omitempty"`
	// MissedDeadlineCount - The number of times this expectation has missed a deadline since it was last fulfilled.
	MissedDeadlineCount *float64 `json:"missedDeadlineCount,omitempty"`
	Name                *string  `json:"name,omitempty"`
	// DisplayName - The name of the expectation.
	DisplayName *string `json:"displayName,omitempty"`
	// Description - An optional description to help users.
	Description *string `json:"description,omitempty"`
	// Tenant - The tenant the expectation belongs to.
	Tenant *string `json:"tenant,omitempty"`
	// System - The system the expectation belongs to.
	System    *string   `json:"system,omitempty"`
	Tolerance *float64  `json:"tolerance,omitempty"`
	Schedule  *Schedule `json:"schedule,omitempty"`
	// Behavior - Possible values include: 'Heartbeat', 'Transient', 'Recurrent', 'UntilFulfilled', 'Workflow'
	Behavior      Behavior   `json:"behavior,omitempty"`
	ScheduledFrom *date.Time `json:"scheduledFrom,omitempty"`
	// MaxMissedDeadlineCount - The number of times this expectation can miss a deadline before it is considered failed
	MaxMissedDeadlineCount *float64    `json:"maxMissedDeadlineCount,omitempty"`
	Tags                   *[]string   `json:"tags,omitempty"`
	Data                   interface{} `json:"data,omitempty"`
	OnFailedEvent          interface{} `json:"onFailedEvent,omitempty"`
	OnFulfilledEvent       interface{} `json:"onFulfilledEvent,omitempty"`
	OnDeadlineEvent        interface{} `json:"onDeadlineEvent,omitempty"`
}

// ExpectationInputs ...
type ExpectationInputs struct {
	Name *string `json:"name,omitempty"`
	// DisplayName - The name of the expectation.
	DisplayName *string `json:"displayName,omitempty"`
	// Description - An optional description to help users.
	Description *string `json:"description,omitempty"`
	// Tenant - The tenant the expectation belongs to.
	Tenant *string `json:"tenant,omitempty"`
	// System - The system the expectation belongs to.
	System    *string   `json:"system,omitempty"`
	Tolerance *float64  `json:"tolerance,omitempty"`
	Schedule  *Schedule `json:"schedule,omitempty"`
	// Behavior - Possible values include: 'Behavior1Heartbeat', 'Behavior1Transient', 'Behavior1Recurrent', 'Behavior1UntilFulfilled', 'Behavior1Workflow'
	Behavior      Behavior1  `json:"behavior,omitempty"`
	ScheduledFrom *date.Time `json:"scheduledFrom,omitempty"`
	// MaxMissedDeadlineCount - The number of times this expectation can miss a deadline before it is considered failed
	MaxMissedDeadlineCount *float64    `json:"maxMissedDeadlineCount,omitempty"`
	Tags                   *[]string   `json:"tags,omitempty"`
	Data                   interface{} `json:"data,omitempty"`
	OnFailedEvent          interface{} `json:"onFailedEvent,omitempty"`
	OnFulfilledEvent       interface{} `json:"onFulfilledEvent,omitempty"`
	OnDeadlineEvent        interface{} `json:"onDeadlineEvent,omitempty"`
}

// FailedExpectation ...
type FailedExpectation struct {
	Message *string `json:"message,omitempty"`
}

// Feature ...
type Feature struct {
	autorest.Response `json:"-"`
	Name              *string `json:"name,omitempty"`
	// Version - A SemVer version number.
	Version *string `json:"version,omitempty"`
	// Path - NRN resource path for a beacon resource. The "name" position may be redundent for the feature (ftr) and feature instance (fin) types. The "system" position is the dot-delimited hierarchy of system names above this resource, if the resource is contained within a system.
	Path   *string     `json:"path,omitempty"`
	Labels interface{} `json:"labels,omitempty"`
	// IsPerTenant - The tenant the config belongs to, if any.
	IsPerTenant          *bool       `json:"isPerTenant,omitempty"`
	Contract             interface{} `json:"contract,omitempty"`
	Config               interface{} `json:"config,omitempty"`
	InstanceConfigSchema interface{} `json:"instanceConfigSchema,omitempty"`
	ProvisioningTasks    *[]TaskSpec `json:"provisioningTasks,omitempty"`
	UnprovisioningTasks  *[]TaskSpec `json:"unprovisioningTasks,omitempty"`
	// ProvisioningTimeoutMS - The time allowed for (un)provisioning.
	ProvisioningTimeoutMS *float64 `json:"provisioningTimeoutMS,omitempty"`
	// SystemStartupMS - The milliseconds to wait for implementing systems to come online after enabling an instance.
	SystemStartupMS *float64 `json:"systemStartupMS,omitempty"`
	// SystemStartupRetries - The number of times to resend triggering events when systems do not come online.
	SystemStartupRetries *float64       `json:"systemStartupRetries,omitempty"`
	CreatedAt            *date.Time     `json:"createdAt,omitempty"`
	UpdatedAt            *date.Time     `json:"updatedAt,omitempty"`
	Healthchecks         *[]Healthcheck `json:"healthchecks,omitempty"`
}

// FeatureInstance ...
type FeatureInstance struct {
	autorest.Response `json:"-"`
	// Path - NRN resource path for a beacon resource. The "name" position may be redundent for the feature (ftr) and feature instance (fin) types. The "system" position is the dot-delimited hierarchy of system names above this resource, if the resource is contained within a system.
	Path *string `json:"path,omitempty"`
	// Key - The key used by the system implementing this feature instance to retrieve the instance configuration.
	Key       *string `json:"key,omitempty"`
	IsEnabled *bool   `json:"isEnabled,omitempty"`
	// FeatureName - The name of the feature this represents an instance of.
	FeatureName *string `json:"featureName,omitempty"`
	// FeatureVersion - The SemVer version of the feature this represents an instance of.
	FeatureVersion *string `json:"featureVersion,omitempty"`
	// InstanceName - The name of this instance of the feature.
	InstanceName *string     `json:"instanceName,omitempty"`
	Labels       interface{} `json:"labels,omitempty"`
	// Tenant - The tenant this instance belongs to, if any.
	Tenant                *string     `json:"tenant,omitempty"`
	Config                interface{} `json:"config,omitempty"`
	ProvisionerParameters interface{} `json:"provisionerParameters,omitempty"`
	// SystemPath - The path of the system implementing this feature.
	SystemPath *string    `json:"systemPath,omitempty"`
	CreatedAt  *date.Time `json:"createdAt,omitempty"`
	UpdatedAt  *date.Time `json:"updatedAt,omitempty"`
}

// FeatureInstanceInputs ...
type FeatureInstanceInputs struct {
	// FeatureName - The name of the feature this represents an instance of.
	FeatureName *string `json:"featureName,omitempty"`
	// FeatureVersion - The SemVer version of the feature this represents an instance of.
	FeatureVersion *string `json:"featureVersion,omitempty"`
	// InstanceName - The name of this instance of the feature.
	InstanceName *string     `json:"instanceName,omitempty"`
	Labels       interface{} `json:"labels,omitempty"`
	// Tenant - The tenant this instance belongs to, if any.
	Tenant *string     `json:"tenant,omitempty"`
	Config interface{} `json:"config,omitempty"`
	// Key - The key used by the system implementing this feature instance to retrieve the instance configuration.
	Key                   *string     `json:"key,omitempty"`
	ProvisionerParameters interface{} `json:"provisionerParameters,omitempty"`
}

// FulfilledExpectation ...
type FulfilledExpectation struct {
	Message *string `json:"message,omitempty"`
}

// Healthcheck ...
type Healthcheck struct {
	Name *string `json:"name,omitempty"`
	// Type - Possible values include: 'Type1Heartbeat', 'Type1HTTP', 'Type1Query'
	Type       Type1    `json:"type,omitempty"`
	IntervalMS *float64 `json:"intervalMS,omitempty"`
}

// Layout ...
type Layout struct {
	Path    *string       `json:"path,omitempty"`
	Include *string       `json:"include,omitempty"`
	Exclude *string       `json:"exclude,omitempty"`
	Nodes   *[]LayoutNode `json:"nodes,omitempty"`
}

// LayoutNode ...
type LayoutNode struct {
	PathTemplate    *string `json:"pathTemplate,omitempty"`
	ContentTemplate *string `json:"contentTemplate,omitempty"`
	Type            *string `json:"type,omitempty"`
}

// ListEvent ...
type ListEvent struct {
	autorest.Response `json:"-"`
	Value             *[]Event `json:"value,omitempty"`
}

// ListExpectation ...
type ListExpectation struct {
	autorest.Response `json:"-"`
	Value             *[]Expectation `json:"value,omitempty"`
}

// ListFeature ...
type ListFeature struct {
	autorest.Response `json:"-"`
	Value             *[]Feature `json:"value,omitempty"`
}

// ListFeatureInstance ...
type ListFeatureInstance struct {
	autorest.Response `json:"-"`
	Value             *[]FeatureInstance `json:"value,omitempty"`
}

// ListSystem ...
type ListSystem struct {
	autorest.Response `json:"-"`
	Value             *[]System `json:"value,omitempty"`
}

// RescheduledExpectation ...
type RescheduledExpectation struct {
	Message *string `json:"message,omitempty"`
	// RescheduleTo - If kind=rescheduled, this can be the new start time for the expectation.
	RescheduleTo *date.Time `json:"rescheduleTo,omitempty"`
}

// Schedule ...
type Schedule struct {
	// Type - The type of schedule. Possible values include: 'Cron', 'TTL', 'Immediate', 'Deadline'
	Type Type `json:"type,omitempty"`
	// Cron - The cron schedule, required if type==cron
	Cron *string `json:"cron,omitempty"`
	// TTL - The TTL in milliseconds, required if type==ttl
	TTL *float64 `json:"ttl,omitempty"`
	// Deadline - The deadline, required if type=deadline
	Deadline *date.Time `json:"deadline,omitempty"`
}

// SetObject ...
type SetObject struct {
	autorest.Response `json:"-"`
	Value             interface{} `json:"value,omitempty"`
}

// String ...
type String struct {
	autorest.Response `json:"-"`
	Value             *string `json:"value,omitempty"`
}

// System ...
type System struct {
	autorest.Response           `json:"-"`
	ID                          *string    `json:"id,omitempty"`
	Name                        *string    `json:"name,omitempty"`
	FailedExpectationCount      *float64   `json:"failedExpectationCount,omitempty"`
	ChildFailedExpectationCount *float64   `json:"childFailedExpectationCount,omitempty"`
	CreatedAt                   *date.Time `json:"createdAt,omitempty"`
	UpdatedAt                   *date.Time `json:"updatedAt,omitempty"`
	Path                        *string    `json:"path,omitempty"`
	// State - Possible values include: 'State1Running', 'State1Stopped'
	State         State1  `json:"state,omitempty"`
	WorkflowState *string `json:"workflowState,omitempty"`
	// Tenant - The tenant the owner belongs to.
	Tenant *string `json:"tenant,omitempty"`
	// DisplayName - The display name of the system.
	DisplayName *string `json:"displayName,omitempty"`
	// Description - An optional description to help users.
	Description *string `json:"description,omitempty"`
	ParentPath  *string `json:"parentPath,omitempty"`
	// FeatureInstancePath - The ID of the feature instance this system implements, if any.
	FeatureInstancePath *string `json:"featureInstancePath,omitempty"`
	// ActiveConfig - The most recent config this system obtained from its feature instance, if any.
	ActiveConfig *string `json:"activeConfig,omitempty"`
}

// SystemInputs ...
type SystemInputs struct {
	Name *string `json:"name,omitempty"`
	// Tenant - The tenant the owner belongs to.
	Tenant *string `json:"tenant,omitempty"`
	// DisplayName - The display name of the system.
	DisplayName *string `json:"displayName,omitempty"`
	// Description - An optional description to help users.
	Description *string `json:"description,omitempty"`
	ParentPath  *string `json:"parentPath,omitempty"`
	// FeatureInstancePath - The ID of the feature instance this system implements, if any.
	FeatureInstancePath *string `json:"featureInstancePath,omitempty"`
	// ActiveConfig - The most recent config this system obtained from its feature instance, if any.
	ActiveConfig *string `json:"activeConfig,omitempty"`
}

// TaskSpec ...
type TaskSpec struct {
	TaskName *string     `json:"taskName,omitempty"`
	Values   interface{} `json:"values,omitempty"`
	Layout   *Layout     `json:"layout,omitempty"`
}
